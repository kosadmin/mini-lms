"use client";

import { useEffect, useState } from "react";
import { useParams } from "next/navigation";

export default function DocumentDetail() {
  const { id } = useParams();
  const [doc, setDoc] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // --- L·∫•y chi ti·∫øt t√†i li·ªáu ---
  useEffect(() => {
    async function fetchDetail() {
      setLoading(true);
      setError(null);
      try {
        const res = await fetch(process.env.NEXT_PUBLIC_API_DETAIL_URL, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ id }),
        });

        if (!res.ok) throw new Error(`L·ªói HTTP ${res.status}`);
        const json = await res.json();

        let found = null;
        const normalize = (v) => String(v || "").trim().toLowerCase();

        if (Array.isArray(json)) {
          found = json.find((item) => normalize(item.id) === normalize(id));
        } else if (Array.isArray(json?.data)) {
          found = json.data.find((item) => normalize(item.id) === normalize(id));
        } else if (json?.id && normalize(json.id) === normalize(id)) {
          found = json;
        }

        if (!found) throw new Error("Kh√¥ng t√¨m th·∫•y t√†i li·ªáu ph√π h·ª£p v·ªõi ID " + id);
        setDoc(found);
      } catch (error) {
        console.error("‚ùå L·ªói khi t·∫£i t√†i li·ªáu:", error);
        setError(error.message);
        setDoc(null);
      } finally {
        setLoading(false);
      }
    }

    if (id) fetchDetail();
  }, [id]);

  if (loading)
    return (
      <div className="flex items-center justify-center h-full text-[#fd6600] font-medium text-lg animate-pulse">
        ‚è≥ ƒêang t·∫£i d·ªØ li·ªáu...
      </div>
    );
  if (error)
    return (
      <div className="p-3 text-center text-red-600 bg-[#fff4e3] rounded-xl shadow-md">
        ‚ùå Kh√¥ng th·ªÉ t·∫£i t√†i li·ªáu: {error}
      </div>
    );
  if (!doc)
    return (
      <div className="p-3 text-center text-gray-600 bg-[#fff4e3] rounded-xl shadow-md">
        Kh√¥ng t√¨m th·∫•y t√†i li·ªáu.
      </div>
    );

  return (
    <main className="p-3 bg-[#fff4e3] rounded-2xl shadow-md border border-white space-y-6 animate-fade-in">

      {/* Ti√™u ƒë·ªÅ */}
      <h1 className="text-2xl font-semibold text-[#fd6600] border-b-3 border-[#ffdf99] pb-1 py-2 px-2">üìö
        {doc.title}
      </h1>

      {/* Th√¥ng tin chi ti·∫øt */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-3 text-gray-800 bg-white rounded-xl px-4 py-4 border-l-4 border-[#fd6600] shadow-sm">
        <p>
          <strong className="text-[#fd6600]">M√£ t√†i li·ªáu:</strong> {doc.id}
        </p>
        <p>
          <strong className="text-[#fd6600]">Lo·∫°i t√†i li·ªáu:</strong> {doc.type}
        </p>
        <p>
          <strong className="text-[#fd6600]">Ph√≤ng ban:</strong> {doc.department}
        </p>
        <p>
          <strong className="text-[#fd6600]">Ph√¢n quy·ªÅn:</strong> {doc.tags}
        </p>
        <p>
          <strong className="text-[#fd6600]">Chia s·∫ª cho:</strong> {doc.share}
        </p>
        <p>
          <strong className="text-[#fd6600]">S·ªë ph·∫ßn:</strong> {doc.part}
        </p>
        <p>
          <strong className="text-[#fd6600]">Th·ªùi l∆∞·ª£ng h·ªçc:</strong>{" "}
          {doc.learn_time}
        </p>
        <p>
          <strong className="text-[#fd6600]">C·∫≠p nh·∫≠t:</strong>{" "}
          {doc.updated_at}
        </p>
      </div>

      {/* Gi·ªõi thi·ªáu */}
      {doc.intro && (
        <section className="bg-white px-4 py-4 rounded-xl border-l-4 border-[#fd6600] shadow-sm">
          <h2 className="text-2xl font-bold text-[#fd6600] mb-2">
            ‚ÑπÔ∏è Gi·ªõi thi·ªáu
          </h2>
          <p className="text-gray-700 leading-relaxed whitespace-pre-line">
            {doc.intro}
          </p>
        </section>
      )}

      {/* M·ª•c ti√™u */}
      {doc.target && (
        <section className="bg-white px-4 py-4 rounded-xl border-l-4 border-[#fd6600] shadow-sm">
          <h2 className="text-2xl font-bold text-[#fd6600] mb-2">
            üéØ Nh·ªØng g√¨ b·∫°n s·∫Ω h·ªçc ƒë∆∞·ª£c
          </h2>
          <p className="text-gray-700 leading-relaxed whitespace-pre-line">
            {doc.target}
          </p>
        </section>
      )}

      {/* --- N√∫t h√†nh ƒë·ªông --- */}
      <div className="flex flex-wrap gap-4 mt-8">
        <button
          onClick={() => (window.location.href = `/document/${doc.id}/view`)}
          className="px-5 py-3 bg-[#fd6600] text-white font-semibold rounded-xl shadow hover:bg-[#ff751f] transition-all"
        >
          B·∫Øt ƒë·∫ßu
        </button>

        <button
          onClick={() => window.history.back()}
          className="px-5 py-3 bg-white text-gray-700 font-semibold rounded-xl shadow hover:bg-[#ffdf99] hover:text-black transition-all"
        >
          Ki·∫øn th·ª©c kh√°c ‚Üí
        </button>
      </div>
    </main>
  );
}
